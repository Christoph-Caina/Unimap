
#ifndef _SEXTRACTION_INIT_STATIC
#define _SEXTRACTION_INIT_STATIC


//prefstruct	CSextractor::prefs;
//sexcatstruct	CSextractor::thecat;
//objstruct	CSextractor::outobj;
//obj2struct	CSextractor::outobj2;

//picstruct	CSextractor::thefield1;
//picstruct	CSextractor::thefield2;
//picstruct	CSextractor::thewfield1;
//picstruct	CSextractor::thewfield2;

/*
// init my statics
sexcatstruct	CSextractor::thecat;
objstruct	CSextractor::outobj;
obj2struct	CSextractor::outobj2;
infostruct*	CSextractor::info; 
infostruct*	CSextractor::store;
char*		CSextractor::marker;
status*		CSextractor::psstack;
int*			CSextractor::start;
int*			CSextractor::end;
int*			CSextractor::discan;
int			CSextractor::xmin;
int			CSextractor::ymin;
int			CSextractor::xmax;
int			CSextractor::ymax;
objliststruct*	CSextractor::objlistRefine;
short*		CSextractor::son;
short*		CSextractor::ok;

int			CSextractor::idummy;
double		CSextractor::ddummy;

//prefstruct	CSextractor::prefs;
//picstruct	CSextractor::thefield1;
//picstruct	CSextractor::thefield2;
//picstruct	CSextractor::thewfield1;
//picstruct	CSextractor::thewfield2;
*/

/*
///////////////////////////////////////////////////////
// KEY INITIALIZATION
pkeystruct CSextractor::key[] =
 {
  {"ANALYSIS_THRESH", P_FLOATLIST, prefs.thresh, 0,0, -BIG, BIG,
    {""}, 1, 2, &prefs.nthresh},
  {"ASSOC_DATA", P_INTLIST, prefs.assoc_data, 0, 1000000,0.0,0.0,
    {""}, 1,MAXLIST, &prefs.nassoc_data},
  {"ASSOC_NAME", P_STRING, prefs.assoc_name},
  {"ASSOC_PARAMS", P_INTLIST, prefs.assoc_param, 1, 1000000,0.0,0.0,
    {""}, 2,3, &prefs.nassoc_param},
  {"ASSOC_RADIUS", P_FLOAT, &prefs.assoc_radius, 0,0, 1e-10,1e+10},
  {"ASSOC_TYPE", P_KEY, &prefs.assoc_type, 0,0, 0.0,0.0,
   {"FIRST", "NEAREST", "MEAN", "MAG_MEAN", "SUM", "MAG_SUM",
   "MIN", "MAX", ""}},
  {"ASSOCSELEC_TYPE", P_KEY, &prefs.assocselec_type, 0,0, 0.0,0.0,
   {"ALL","MATCHED","-MATCHED",""}},
  {"BACK_FILTERSIZE", P_INTLIST, prefs.backfsize, 1,11, 0.0,0.0,
    {""}, 1,2, &prefs.nbackfsize},
  {"BACK_FILTTHRESH", P_FLOAT, &prefs.backfthresh, 0,0, 0.0,BIG},
  {"BACKPHOTO_THICK", P_INT, &prefs.pback_size, 1, 256},
  {"BACKPHOTO_TYPE", P_KEY, &prefs.pback_type, 0,0, 0.0,0.0,
   {"GLOBAL","LOCAL",""}},
  {"BACK_SIZE", P_INTLIST, prefs.backsize, 1,2000000000, 0.0,0.0,
    {""}, 1,2, &prefs.nbacksize},
  {"BACK_TYPE", P_KEYLIST, prefs.back_type, 0,0, 0.0,0.0,
   {"AUTO","MANUAL",""},
    1, 2, &prefs.nback_type},
  {"BACK_VALUE", P_FLOATLIST, prefs.back_val, 0,0, -BIG,BIG,
   {""}, 1, 2, &prefs.nback_val},
  {"CATALOG_NAME", P_STRING, prefs.cat_name},
  {"CATALOG_TYPE", P_KEY, &prefs.cat_type, 0,0, 0.0,0.0,
   {"NONE", "ASCII","ASCII_HEAD", "ASCII_SKYCAT", "ASCII_VOTABLE",
	"FITS_LDAC", "FITS_TPX", "FITS_1.0",""}},
  {"CHECKIMAGE_NAME", P_STRINGLIST, prefs.check_name, 0,0,0.0,0.0,
    {""}, 0, MAXCHECK, &prefs.ncheck_name},
  {"CHECKIMAGE_TYPE", P_KEYLIST, prefs.check_type, 0,0, 0.0,0.0,
   {"NONE", "IDENTICAL",
   "BACKGROUND", "BACKGROUND_RMS", "MINIBACKGROUND",
   "MINIBACK_RMS", "-BACKGROUND",
   "FILTERED", "OBJECTS", "APERTURES", "SEGMENTATION", "ASSOC",
   "-OBJECTS", "-PSF_PROTOS", "PSF_PROTOS",
   "-PC_CONVPROTOS", "PC_CONVPROTOS", "PC_PROTOS", ""},
   0, 17, &prefs.ncheck_type},
  {"CLEAN", P_BOOL, &prefs.clean_flag},
  {"CLEAN_PARAM", P_FLOAT, &prefs.clean_param, 0,0, 0.1,10.0},
  {"DEBLEND_MINCONT", P_FLOAT, &prefs.deblend_mincont, 0,0, 0.0,1.0},
  {"DEBLEND_NTHRESH", P_INT, &prefs.deblend_nthresh, 1,64},
  {"DETECT_MINAREA", P_INT, &prefs.ext_minarea, 1,1000000},
  {"DETECT_THRESH", P_FLOATLIST, prefs.dthresh, 0,0, -BIG, BIG,
   {""}, 1, 2, &prefs.ndthresh},
  {"DETECT_TYPE", P_KEY, &prefs.detect_type, 0,0, 0.0,0.0,
   {"CCD","PHOTO",""}},
  {"FILTER", P_BOOL, &prefs.filter_flag},
  {"FILTER_NAME", P_STRING, prefs.filter_name},
  {"FILTER_THRESH", P_FLOATLIST, prefs.filter_thresh, 0,0,-BIG,BIG,
   {""}, 0, 2, &prefs.nfilter_thresh},
  {"FITS_UNSIGNED", P_BOOL, &prefs.fitsunsigned_flag},
  {"FLAG_IMAGE", P_STRINGLIST, prefs.fimage_name, 0,0,0.0,0.0,
    {""}, 0, MAXFLAG, &prefs.nfimage_name},
  {"FLAG_TYPE",  P_KEYLIST, prefs.flag_type, 0,0, 0.0,0.0,
   {"OR","AND","MIN", "MAX", "MOST",""}, 0, MAXFLAG, &idummy},
  {"GAIN", P_FLOAT, &prefs.gain, 0,0, 0.0, 1e+30},
  {"INTERP_MAXXLAG", P_INTLIST, prefs.interp_xtimeout, 1,1000000, 0.0,0.0,
   {""}, 1, 2, &prefs.ninterp_xtimeout},
  {"INTERP_MAXYLAG", P_INTLIST, prefs.interp_ytimeout, 1,1000000, 0.0,0.0,
   {""}, 1, 2, &prefs.ninterp_ytimeout},
  {"INTERP_TYPE", P_KEYLIST, prefs.interp_type, 0,0, 0.0,0.0,
   {"NONE","VAR_ONLY","ALL",""}, 1, 2, &prefs.ninterp_type},
  {"MAG_GAMMA", P_FLOAT, &prefs.mag_gamma, 0,0, 1e-10,1e+30},
  {"MAG_ZEROPOINT", P_FLOAT, &prefs.mag_zeropoint, 0,0, -100.0, 100.0},
  {"MASK_TYPE", P_KEY, &prefs.mask_type, 0,0, 0.0,0.0,
   {"NONE","BLANK","CORRECT",""}},
  {"MEMORY_BUFSIZE", P_INT, &prefs.mem_bufsize, 8, 65534},
  {"MEMORY_OBJSTACK", P_INT, &prefs.clean_stacksize, 16,65536},
  {"MEMORY_PIXSTACK", P_INT, &prefs.mem_pixstack, 1000, 10000000},
  {"NTHREADS", P_INT, &prefs.nthreads, 0, THREADS_PREFMAX},
  {"PARAMETERS_NAME", P_STRING, prefs.param_name},
  {"PHOT_APERTURES", P_FLOATLIST, prefs.apert, 0,0, 0.0,2*MAXPICSIZE,
   {""}, 1, MAXNAPER, &prefs.naper},
  {"PHOT_AUTOPARAMS", P_FLOATLIST, prefs.autoparam, 0,0, 0.0,10.0,
   {""}, 2,2, &prefs.nautoparam},
  {"PHOT_AUTOAPERS", P_FLOATLIST, prefs.autoaper, 0,0, 0.0,1e6,
   {""}, 2,2, &prefs.nautoaper},
  {"PHOT_FLUXFRAC", P_FLOATLIST, prefs.flux_frac, 0,0, 1e-6, 1.0,
   {""}, 1, MAXNAPER, &prefs.nflux_frac},
  {"PHOT_PETROPARAMS", P_FLOATLIST, prefs.petroparam, 0,0, 0.0,10.0,
   {""}, 2,2, &prefs.npetroparam},
  {"PIXEL_SCALE", P_FLOAT, &prefs.pixel_scale, 0,0, 0.0, 1e+10},
  {"PSF_NAME", P_STRINGLIST, prefs.psf_name, 0,0, 0.0,0.0,
   {""}, 1, 2, &prefs.npsf_name},	// ???
  {"PSF_NMAX", P_INT, &prefs.psf_npsfmax, 1, PSF_NPSFMAX},
  {"PSFDISPLAY_TYPE", P_KEY, &prefs.psfdisplay_type, 0,0, 0.0,0.0,
   {"SPLIT","VECTOR",""}},
  {"SATUR_LEVEL", P_FLOAT, &prefs.satur_level, 0,0, -1e+30, 1e+30},
  {"SEEING_FWHM", P_FLOAT, &prefs.seeing_fwhm, 0,0, 1e-10, 1e+10},
  {"SOM_NAME", P_STRING, prefs.som_name},
  {"STARNNW_NAME", P_STRING, prefs.nnw_name},
  {"THRESH_TYPE", P_KEYLIST, prefs.thresh_type, 0,0, 0.0,0.0,
   {"RELATIVE","ABSOLUTE"},
    1, 2, &prefs.nthresh_type},
  {"VERBOSE_TYPE", P_KEY, &prefs.verbose_type, 0,0, 0.0,0.0,
   {"QUIET","NORMAL", "EXTRA_WARNINGS", "FULL",""}},
  {"WEIGHT_GAIN", P_BOOL, &prefs.weightgain_flag},
  {"WEIGHT_IMAGE", P_STRINGLIST, prefs.wimage_name, 0,0,0.0,0.0,
    {""}, 0, MAXIMAGE, &prefs.nwimage_name},
  {"WEIGHT_THRESH", P_FLOATLIST, prefs.weight_thresh, 0,0, 0.0, BIG,
   {""}, 0, 2, &prefs.nweight_thresh},
  {"WEIGHT_TYPE", P_KEYLIST, prefs.weight_type, 0,0, 0.0,0.0,
   {"NONE","BACKGROUND", "MAP_RMS", "MAP_VAR","MAP_WEIGHT", ""},
   0, MAXIMAGE, &prefs.nweight_type},
  {"WRITE_XML", P_BOOL, &prefs.xml_flag},
  {"XML_NAME", P_STRING, prefs.xml_name},
  {"XSL_URL", P_STRING, prefs.xsl_name},
  {""}
 };
*/

/*
/////////////////////////////////////////////////////////////////
// OBJKEY INITIALIZATION
keystruct CSextractor::objkey[]= {
  {"NUMBER", "Running object number",
	&outobj.number, H_INT, T_LONG, "%10d", "",
	"meta.record", ""},
  {"EXT_NUMBER", "FITS extension number",
	&outobj2.ext_number, H_INT, T_SHORT, "%3d", "",
	"meta.id;meta.dataset", ""},
  {"FLUX_ISO", "Isophotal flux",
	&outobj2.flux_iso, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_ISO", "RMS error for isophotal flux",
	&outobj2.fluxerr_iso, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_ISO", "Isophotal magnitude",
	&outobj2.mag_iso, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_ISO", "RMS error for isophotal magnitude",
	&outobj2.magerr_iso, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_ISOCOR", "Corrected isophotal flux",
	&outobj2.flux_isocor, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_ISOCOR", "RMS error for corrected isophotal flux",
	&outobj2.fluxerr_isocor, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_ISOCOR", "Corrected isophotal magnitude",
	&outobj2.mag_isocor, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_ISOCOR", "RMS error for corrected isophotal magnitude",
	&outobj2.magerr_isocor, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_APER", "Flux vector within fixed circular aperture(s)",
	&outobj2.flux_aper, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct", 1, &prefs.flux_apersize},
  {"FLUXERR_APER", "RMS error vector for aperture flux(es)",
	&outobj2.fluxerr_aper, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct", 1, &prefs.fluxerr_apersize},
  {"MAG_APER", "Fixed aperture magnitude vector",
	&outobj2.mag_aper, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag", 1, &prefs.mag_apersize},
  {"MAGERR_APER", "RMS error vector for fixed aperture mag.",
	&outobj2.magerr_aper, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag", 1, &prefs.magerr_apersize},

  {"FLUX_AUTO", "Flux within a Kron-like elliptical aperture",
	&outobj2.flux_auto, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux;meta.main", "ct"},
  {"FLUXERR_AUTO", "RMS error for AUTO flux",
	&outobj2.fluxerr_auto, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux;meta.main", "ct"},
  {"MAG_AUTO", "Kron-like elliptical aperture magnitude",
	&outobj2.mag_auto, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag;meta.main", "mag"},
  {"MAGERR_AUTO", "RMS error for AUTO magnitude",
	&outobj2.magerr_auto, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag;meta.main", "mag"},

  {"FLUX_PETRO", "Flux within a Petrosian-like elliptical aperture",
	&outobj2.flux_petro, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_PETRO", "RMS error for PETROsian flux",
	&outobj2.fluxerr_petro, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_PETRO", "Petrosian-like elliptical aperture magnitude",
	&outobj2.mag_petro, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_PETRO", "RMS error for PETROsian magnitude",
	&outobj2.magerr_petro, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_BEST", "Best of FLUX_AUTO and FLUX_ISOCOR",
	&outobj2.flux_best, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_BEST", "RMS error for BEST flux",
	&outobj2.fluxerr_best, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_BEST", "Best of MAG_AUTO and MAG_ISOCOR",
	&outobj2.mag_best, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_BEST", "RMS error for MAG_BEST",
	&outobj2.magerr_best, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_PROFILE", "Flux weighted by the FILTERed profile",
	&outobj2.flux_prof, H_FLOAT, T_FLOAT, "%12.7g", "count"
	"phot.flux", "ct"},
  {"FLUXERR_PROFILE", "RMS error for PROFILE flux",
	&outobj2.fluxerr_prof, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_PROFILE", "Magnitude weighted by the FILTERed profile",
	&outobj2.mag_prof, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_PROFILE", "RMS error for MAG_PROFILE",
	&outobj2.magerr_prof, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_WIN", "Gaussian-weighted flux",
	&outobj2.flux_win, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_WIN", "RMS error for WIN flux",
	&outobj2.fluxerr_win, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_WIN", "Gaussian-weighted magnitude",
	&outobj2.mag_win, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_WIN", "RMS error for MAG_WIN",
	&outobj2.magerr_win, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},

  {"FLUX_SOMFIT", "Flux derived from SOM fit",
	&outobj2.flux_somfit, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux", "ct"},
  {"FLUXERR_SOMFIT", "RMS error for SOMFIT flux",
	&outobj2.fluxerr_somfit, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.flux", "ct"},
  {"MAG_SOMFIT", "Magnitude derived from SOM fit",
	&outobj2.mag_somfit, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag"},
  {"MAGERR_SOMFIT", "Magnitude error derived from SOM fit",
	&outobj2.magerr_somfit, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag"},
  {"ERROR_SOMFIT", "Reduced Chi-square error of the SOM fit",
	&outobj2.stderr_somfit, H_FLOAT, T_FLOAT, "%10.4g", "",
	"stat.fit.chi2", ""},
  {"VECTOR_SOMFIT", "Position vector of the winning SOM node",
	&outobj2.vector_somfit, H_FLOAT, T_FLOAT, "%5.2f", "",
	"src.morph.param", "", 1, &prefs.somfit_vectorsize},

  {"FLUX_GALFIT", "Flux derived from the galaxy fit",
	&outobj2.flux_galfit, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux;stat.fit.param", "ct"},
//
//  {"FLUXERR_GALFIT", "RMS error for GALFIT flux",
//	&outobj2.fluxerr_galfit, H_FLOAT, T_FLOAT, "%12.7g", "count"},

  {"MAG_GALFIT", "Magnitude derived from galaxy fit",
	&outobj2.mag_galfit, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag;stat.fit.param", "mag"},


//  {"MAGERR_GALFIT", "Magnitude error derived from galaxy fit",
//	&outobj2.magerr_galfit, H_FLOAT, T_FLOAT, "%8.4f", "mag"},
//  {"ERROR_GALFIT", "Reduced Chi-square error of the galaxy fit",
//	&outobj2.stderr_galfit, H_FLOAT, T_FLOAT, "%10g", ""},

  {"GALDANG_IMAGE", "Galaxy disk position angle  from the galaxy fit",
	&outobj2.gdposang, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;stat.fit.param", "deg"},
  {"GALDSCALE_IMAGE", "Galaxy disk-scale from the galaxy fit",
	&outobj2.gdscale, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"src.morph.scLength;stat.fit.param", "pix"},
  {"GALDASPEC_IMAGE", "Galaxy disk aspect ratio from the galaxy fit",
	&outobj2.gdaspect, H_FLOAT, T_FLOAT, "%5.3f", "",
	"phys.size.axisRatio;stat.fit.param", ""},
  {"GALDE1_IMAGE", "Galaxy disk ellipticity #1 from the galaxy fit",
	&outobj2.gde1, H_FLOAT, T_FLOAT, "%6.4f", "",
	"src.ellipticity", ""},
  {"GALDE2_IMAGE", "Galaxy disk ellipticity #2 from the galaxy fit",
	&outobj2.gde2, H_FLOAT, T_FLOAT, "%6.4f", "",
	"src.ellipticity", ""},
  {"GALBRATIO_IMAGE", "Galaxy bulge ratio from the galaxy fit",
	&outobj2.gbratio, H_FLOAT, T_FLOAT, "%5.3f", "",
	"src.morph.param;stat.fit.param", ""},
  {"GALBANG_IMAGE", "Galaxy bulge position angle  from the galaxy fit",
	&outobj2.gbposang, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;stat.fit.param", "deg"},
  {"GALBSCALE_IMAGE", "Galaxy bulge-scale from the galaxy fit",
	&outobj2.gbscale, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"src.morph.scLength;stat.fit.param", "pix"},
  {"GALBASPEC_IMAGE", "Galaxy bulge aspect ratio from the galaxy fit",
	&outobj2.gbaspect, H_FLOAT, T_FLOAT, "%5.3f", "",
	"phys.size.axisRatio;stat.fit.param", ""},

  {"KRON_RADIUS", "Kron apertures in units of A or B",
	&outobj2.kronfactor, H_FLOAT, T_FLOAT, "%5.2f", "",
	"arith.factor;arith.ratio", ""},
  {"PETRO_RADIUS", "Petrosian apertures in units of A or B",
	&outobj2.petrofactor, H_FLOAT, T_FLOAT, "%5.2f", "",
	"arith.factor;arith.ratio", ""},
  {"BACKGROUND", "Background at centroid position",
	&outobj.bkg, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"instr.skyLevel", "ct"},
  {"THRESHOLD", "Detection threshold above background",
	&outobj.dthresh, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"instr.sensitivity;phot.flux.sb", "ct"},
  {"FLUX_MAX", "Peak flux above background",
	&outobj.peak, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux.sb;stat.max", "ct"},
  {"ISOAREA_IMAGE", "Isophotal area above Analysis threshold",
	&outobj.npix, H_INT, T_LONG, "%9d", "pixel**2",
	"phys.area", "pix2"},
  {"ISOAREAF_IMAGE", "Isophotal area (filtered) above Detection threshold",
	&outobj.fdnpix, H_INT, T_LONG, "%9d", "pixel**2",
	"phys.area", "pix2"},

  {"XMIN_IMAGE", "Minimum x-coordinate among detected pixels",
	&outobj.xmin, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.x;stat.min", "pix"},
  {"YMIN_IMAGE", "Minimum y-coordinate among detected pixels",
	&outobj.ymin, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.y;stat.min", "pix"},
  {"XMAX_IMAGE", "Maximum x-coordinate among detected pixels",
	&outobj.xmax, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.x;stat.max", "pix"},
  {"YMAX_IMAGE", "Maximum y-coordinate among detected pixels",
	&outobj.ymax, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.y;stat.max", "pix"},

  {"XPEAK_IMAGE", "x-coordinate of the brightest pixel",
	&outobj.peakx, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.x", "pix"},
  {"YPEAK_IMAGE", "y-coordinate of the brightest pixel",
	&outobj.peaky, H_INT, T_LONG, "%10d", "pixel",
	"pos.cartesian.y", "pix"},
  {"XPEAK_WORLD", "World-x coordinate of the brightest pixel",
	&outobj2.peakxw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.ra", "deg"},
  {"YPEAK_WORLD", "World-y coordinate of the brightest pixel",
	&outobj2.peakyw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAPEAK_SKY", "Right ascension of brightest pix (native)",
	&outobj2.peakalphas, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAPEAK_SKY", "Declination of brightest pix (native)",
	&outobj2.peakdeltas, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAPEAK_J2000", "Right ascension of brightest pix (J2000)",
	&outobj2.peakalpha2000, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAPEAK_J2000", "Declination of brightest pix (J2000)",
	&outobj2.peakdelta2000, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAPEAK_B1950", "Right ascension of brightest pix (B1950)",
	&outobj2.peakalpha1950, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAPEAK_B1950", "Declination of brightest pix (B1950)",
	&outobj2.peakdelta1950, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec", "deg"},

  {"X_IMAGE", "Object position along x",
	&outobj2.sposx, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.cartesian.x;pos.barycenter;instr.det;meta.main", "pix"},
  {"Y_IMAGE", "Object position along y",
	&outobj2.sposy, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.cartesian.y;pos.barycenter;instr.det;meta.main", "pix"},
  {"X_IMAGE_DBL", "Object position along x (double precision)",
	&outobj2.posx, H_FLOAT, T_DOUBLE, "%10.3f", "pixel",
	"pos.cartesian.x;pos.barycenter;instr.det", "pix"},
  {"Y_IMAGE_DBL", "Object position along y (double precision)",
	&outobj2.posy, H_FLOAT, T_DOUBLE, "%10.3f", "pixel",
	"pos.cartesian.x;pos.barycenter;instr.det", "pix"},
  {"X_WORLD", "Barycenter position along world x axis",
	&outobj2.mxw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.ra", "deg"},
  {"Y_WORLD", "Barycenter position along world y axis",
	&outobj2.myw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.dec", "deg"},
  {"X_MAMA", "Barycenter position along MAMA x axis",
	&outobj2.mamaposx, H_FLOAT, T_DOUBLE, "%8.1f", "m**(-6)",
	"pos.cartesian.x;instr.det;pos.barycenter", "um"},
  {"Y_MAMA", "Barycenter position along MAMA y axis",
	&outobj2.mamaposy, H_FLOAT, T_DOUBLE, "%8.1f", "m**(-6)",
	"pos.cartesian.y;instr.det;pos.barycenter", "um"},

  {"ALPHA_SKY", "Right ascension of barycenter (native)",
	&outobj2.alphas, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;pos.barycenter", "deg"},
  {"DELTA_SKY", "Declination of barycenter (native)",
	&outobj2.deltas, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;pos.barycenter", "deg"},

  {"ALPHA_J2000", "Right ascension of barycenter (J2000)",
	&outobj2.alpha2000, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;pos.barycenter;meta.main", "deg"},
  {"DELTA_J2000", "Declination of barycenter (J2000)",
	&outobj2.delta2000, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;pos.barycenter;meta.main", "deg"},

  {"ALPHA_B1950", "Right ascension of barycenter (B1950)",
	&outobj2.alpha1950, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;pos.barycenter", "deg"},
  {"DELTA_B1950", "Declination of barycenter (B1950)",
	&outobj2.delta1950, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;pos.barycenter", "deg"},

  {"X2_IMAGE", "Variance along x",
	&outobj.mx2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"Y2_IMAGE", "Variance along y",
	&outobj.my2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"XY_IMAGE", "Covariance between x and y",
	&outobj.mxy, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"X2_WORLD", "Variance along X-WORLD (alpha)",
	&outobj2.mx2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},
  {"Y2_WORLD", "Variance along Y-WORLD (delta)",
	&outobj2.my2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},
  {"XY_WORLD", "Covariance between X-WORLD and Y-WORLD",
	&outobj2.mxyw, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},

  {"CXX_IMAGE", "Cxx object ellipse parameter",
	&outobj.cxx, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CYY_IMAGE", "Cyy object ellipse parameter",
	&outobj.cyy, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CXY_IMAGE", "Cxy object ellipse parameter",
	&outobj.cxy, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CXX_WORLD", "Cxx object ellipse parameter (WORLD units)",
	&outobj2.cxxw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},
  {"CYY_WORLD", "Cyy object ellipse parameter (WORLD units)",
	&outobj2.cyyw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},
  {"CXY_WORLD", "Cxy object ellipse parameter (WORLD units)",
	&outobj2.cxyw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},

  {"A_IMAGE", "Profile RMS along major axis",
	&outobj.a, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"phys.size.smajAxis;instr.det;meta.main", "pix"},
  {"B_IMAGE", "Profile RMS along minor axis",
	&outobj.b, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"phys.size.sminAxis;instr.det;meta.main", "pix"},
  {"THETA_IMAGE", "Position angle (CCW/x)",
	&outobj.theta, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;instr.det;meta.main", "deg"},
  {"A_WORLD", "Profile RMS along major axis (world units)",
	&outobj2.aw, H_FLOAT, T_FLOAT, "%12.7g", "deg",
	"phys.size.smajAxis;meta.main", "deg"},
  {"B_WORLD", "Profile RMS along minor axis (world units)",
	&outobj2.bw, H_FLOAT, T_FLOAT, "%12.7g", "deg",
	"phys.size.sminAxis;meta.main", "deg"},
  {"THETA_WORLD", "Position angle (CCW/world-x)",
	&outobj2.thetaw, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng", "deg"},
  {"THETA_SKY", "Position angle (east of north) (native)",
	&outobj2.thetas, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng", "deg"},
  {"THETA_J2000", "Position angle (east of north) (J2000)",
	&outobj2.theta2000, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng;meta.main", "deg"},
  {"THETA_B1950", "Position angle (east of north) (B1950)",
	&outobj2.theta1950, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng", "deg"},

  {"ERRX2_IMAGE", "Variance of position along x",
	&outobj.poserr_mx2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRY2_IMAGE", "Variance of position along y",
	&outobj.poserr_my2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRXY_IMAGE", "Covariance of position between x and y",
	&outobj.poserr_mxy, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.covariance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRX2_WORLD", "Variance of position along X-WORLD (alpha)",
	&outobj2.poserr_mx2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRY2_WORLD", "Variance of position along Y-WORLD (delta)",
	&outobj2.poserr_my2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRXY_WORLD", "Covariance of position X-WORLD/Y-WORLD",
	&outobj2.poserr_mxyw, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.covariance;pos.errorEllipse", "deg2"},

  {"ERRCXX_IMAGE", "Cxx error ellipse parameter",
	&outobj2.poserr_cxx, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCYY_IMAGE", "Cyy error ellipse parameter",
	&outobj2.poserr_cyy, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXY_IMAGE", "Cxy error ellipse parameter",
	&outobj2.poserr_cxy, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXX_WORLD", "Cxx error ellipse parameter (WORLD units)",
	&outobj2.poserr_cxxw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCYY_WORLD", "Cyy error ellipse parameter (WORLD units)",
	&outobj2.poserr_cyyw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCXY_WORLD", "Cxy error ellipse parameter (WORLD units)",
	&outobj2.poserr_cxyw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},

  {"ERRA_IMAGE", "RMS position error along major axis",
	&outobj2.poserr_a, H_FLOAT, T_FLOAT, "%8.4f", "pixel"
	"stat.stdev;stat.max;pos.errorEllipse;instr.det;meta.main", "pix"},
  {"ERRB_IMAGE", "RMS position error along minor axis",
	&outobj2.poserr_b, H_FLOAT, T_FLOAT, "%8.4f", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse;instr.det;meta.main", "pix"},
  {"ERRTHETA_IMAGE", "Error ellipse position angle (CCW/x)",
	&outobj2.poserr_theta, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse;instr.det;meta.main", "deg"},
  {"ERRA_WORLD", "World RMS position error along major axis",
	&outobj2.poserr_aw, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.max;pos.errorEllipse;meta.main", "deg"},
  {"ERRB_WORLD", "World RMS position error along minor axis",
	&outobj2.poserr_bw, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse;meta.main", "deg"},
  {"ERRTHETA_WORLD", "Error ellipse pos. angle (CCW/world-x)",
	&outobj2.poserr_thetaw, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHETA_SKY", "Native error ellipse pos. angle (east of north)",
	&outobj2.poserr_thetas, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHETA_J2000", "J2000 error ellipse pos. angle (east of north)",
	&outobj2.poserr_theta2000, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse;meta.main", "deg"},
  {"ERRTHETA_B1950", "B1950 error ellipse pos. angle (east of north)",
	&outobj2.poserr_theta1950, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},

  {"XWIN_IMAGE", "Windowed position estimate along x",
	&outobj2.winpos_x, H_FLOAT, T_DOUBLE, "%10.3f", "pixel",
	"pos.cartesian.x;instr.det", "pix"},
  {"YWIN_IMAGE", "Windowed position estimate along y",
	&outobj2.winpos_y, H_FLOAT, T_DOUBLE, "%10.3f", "pixel",
	"pos.cartesian.y;instr.det", "pix"},

  {"XWIN_WORLD", "Windowed position along world x axis",
	&outobj2.winpos_xw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.ra", "deg"},
  {"YWIN_WORLD", "Windowed position along world y axis",
	&outobj2.winpos_yw, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAWIN_SKY", "Windowed right ascension  (native)",
	&outobj2.winpos_alphas, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAWIN_SKY", "Windowed declination (native)",
	&outobj2.winpos_deltas, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAWIN_J2000", "Windowed right ascension (J2000)",
	&outobj2.winpos_alpha2000, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAWIN_J2000", "windowed declination (J2000)",
	&outobj2.winpos_delta2000, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec", "deg"},

  {"ALPHAWIN_B1950", "Windowed right ascension (B1950)",
	&outobj2.winpos_alpha1950, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra", "deg"},
  {"DELTAWIN_B1950", "Windowed declination (B1950)",
	&outobj2.winpos_delta1950, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.deg", "deg"},
  {"X2WIN_IMAGE", "Windowed variance along x",
	&outobj2.win_mx2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
 	"src.impactParam;instr.det", "pix2"},
  {"Y2WIN_IMAGE", "Windowed variance along y",
	&outobj2.win_my2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"XYWIN_IMAGE", "Windowed covariance between x and y",
	&outobj2.win_mxy, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"X2WIN_WORLD", "Windowed variance along X-WORLD (alpha)",
	&outobj2.win_mx2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},
  {"Y2WIN_WORLD", "Windowed variance along Y-WORLD (delta)",
	&outobj2.win_my2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},
  {"XYWIN_WORLD", "Windowed covariance between X-WORLD and Y-WORLD",
	&outobj2.win_mxyw, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"src.impactParam", "deg2"},

  {"CXXWIN_IMAGE", "Windowed Cxx object ellipse parameter",
	&outobj2.win_cxx, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CYYWIN_IMAGE", "Windowed Cyy object ellipse parameter",
	&outobj2.win_cyy, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CXYWIN_IMAGE", "Windowed Cxy object ellipse parameter",
	&outobj2.win_cxy, H_EXPO, T_FLOAT, "%12.7e", "pixel**(-2)",
	"src.impactParam;instr.det", "pix-2"},
  {"CXXWIN_WORLD", "Windowed Cxx object ellipse parameter (WORLD units)",
	&outobj2.win_cxxw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},
  {"CYYWIN_WORLD", "Windowed Cyy object ellipse parameter (WORLD units)",
	&outobj2.win_cyyw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},
  {"CXYWIN_WORLD", "Windowed Cxy object ellipse parameter (WORLD units)",
	&outobj2.win_cxyw, H_EXPO, T_FLOAT, "%12.7e", "deg**(-2)",
	"src.impactParam", "deg-2"},

  {"AWIN_IMAGE", "Windowed profile RMS along major axis",
	&outobj2.win_a, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"phys.size.smajAxis;instr.det", "pix"},
  {"BWIN_IMAGE", "Windowed profile RMS along minor axis",
	&outobj2.win_b, H_FLOAT, T_FLOAT, "%9.3f", "pixel",
	"phys.size.sminAxis;instr.det", "pix"},
  {"THETAWIN_IMAGE", "Windowed position angle (CCW/x)",
	&outobj2.win_theta, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;instr.det", "deg"},
  {"AWIN_WORLD", "Windowed profile RMS along major axis (world units)",
	&outobj2.win_aw, H_FLOAT, T_FLOAT, "%12.7g", "deg",
	"phys.size.smajAxis", "deg"},
  {"BWIN_WORLD", "Windowed profile RMS along minor axis (world units)",
	&outobj2.win_bw, H_FLOAT, T_FLOAT, "%12.7g", "deg",
	"phys.size.sminAxis", "deg"},
  {"THETAWIN_WORLD", "Windowed position angle (CCW/world-x)",
	&outobj2.win_thetaw, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng", "deg"},
  {"THETAWIN_SKY", "Windowed position angle (east of north) (native)",
	&outobj2.win_thetas, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng", "deg"},
  {"THETAWIN_J2000", "Windowed position angle (east of north) (J2000)",
	&outobj2.win_theta2000, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng", "deg"},
  {"THETAWIN_B1950", "Windowed position angle (east of north) (B1950)",
	&outobj2.win_theta1950, H_FLOAT, T_FLOAT, "%+6.2f", "deg",
	"pos.posAng", "deg"},

  {"ERRX2WIN_IMAGE", "Variance of windowed pos along x",
	&outobj2.winposerr_mx2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRY2WIN_IMAGE", "Variance of windowed pos along y",
	&outobj2.winposerr_my2, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRXYWIN_IMAGE", "Covariance of windowed pos between x and y",
	&outobj2.winposerr_mxy, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.covariance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRX2WIN_WORLD", "Variance of windowed pos along X-WORLD (alpha)",
	&outobj2.winposerr_mx2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRY2WIN_WORLD", "Variance of windowed pos along Y-WORLD (delta)",
	&outobj2.winposerr_my2w, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRXYWIN_WORLD", "Covariance of windowed pos X-WORLD/Y-WORLD",
	&outobj2.winposerr_mxyw, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.covariance;pos.errorEllipse", "deg2"},

  {"ERRCXXWIN_IMAGE", "Cxx windowed error ellipse parameter",
	&outobj2.winposerr_cxx, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCYYWIN_IMAGE", "Cyy windowed error ellipse parameter",
	&outobj2.winposerr_cyy, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXYWIN_IMAGE", "Cxy windowed error ellipse parameter",
	&outobj2.winposerr_cxy, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXXWIN_WORLD", "Cxx windowed error ellipse parameter (WORLD units)",
	&outobj2.winposerr_cxxw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCYYWIN_WORLD", "Cyy windowed error ellipse parameter (WORLD units)",
	&outobj2.winposerr_cyyw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCXYWIN_WORLD", "Cxy windowed error ellipse parameter (WORLD units)",
	&outobj2.winposerr_cxyw, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},

  {"ERRAWIN_IMAGE", "RMS windowed pos error along major axis",
	&outobj2.winposerr_a, H_FLOAT, T_FLOAT, "%8.4f", "pixel",
	"stat.stdev;stat.max;pos.errorEllipse;instr.det", "pix"},
  {"ERRBWIN_IMAGE", "RMS windowed pos error along minor axis",
	&outobj2.winposerr_b, H_FLOAT, T_FLOAT, "%8.4f", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse;instr.det", "pix"},
  {"ERRTHETAWIN_IMAGE", "Windowed error ellipse pos angle (CCW/x)",
	&outobj2.winposerr_theta, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse;instr.det", "deg"},
  {"ERRAWIN_WORLD", "World RMS windowed pos error along major axis",
	&outobj2.winposerr_aw, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.max;pos.errorEllipse", "deg"},
  {"ERRBWIN_WORLD", "World RMS windowed pos error along minor axis",
	&outobj2.winposerr_bw, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse", "deg"},
  {"ERRTHETAWIN_WORLD", "Windowed error ellipse pos. angle (CCW/world-x)",
	&outobj2.winposerr_thetaw, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHETAWIN_SKY", "Native windowed error ellipse pos. angle (east of north)",
	&outobj2.winposerr_thetas, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHETAWIN_J2000", "J2000 windowed error ellipse pos. angle (east of north)",
	&outobj2.winposerr_theta2000, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHETAWIN_B1950", "B1950 windowed error ellipse pos. angle (east of north)",
	&outobj2.winposerr_theta1950, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},

  {"NITER_WIN", "Number of iterations for WIN centering",
	&outobj2.winpos_niter, H_INT, T_SHORT, "%3d", "",
	"meta.number", ""},

  {"MU_THRESHOLD", "Detection threshold above background",
	&outobj2.threshmu, H_FLOAT, T_FLOAT, "%8.4f", "mag * arcsec**(-2)",
	"instr.sensitivity;phot.mag.sb", "mag.arcsec-2"},
  {"MU_MAX", "Peak surface brightness above background",
	&outobj2.maxmu, H_FLOAT, T_FLOAT, "%8.4f", "mag * arcsec**(-2)",
	"phot.mag.sb;stat.max", "mag.arcsec-2"},
  {"ISOAREA_WORLD", "Isophotal area above Analysis threshold",
	&outobj2.npixw, H_FLOAT, T_FLOAT, "%12.7g", "deg**2",
	"phys.angArea", "deg2"},
  {"ISOAREAF_WORLD", "Isophotal area (filtered) above Detection threshold",
	&outobj2.fdnpixw, H_FLOAT, T_FLOAT, "%12.7g", "deg**2",
	"phys.angArea", "deg2"},
  {"ISO0", "Isophotal area at level 0",
	&outobj.iso[0], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO1", "Isophotal area at level 1",
	&outobj.iso[1], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO2", "Isophotal area at level 2",
	&outobj.iso[2], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO3", "Isophotal area at level 3",
	&outobj.iso[3], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO4", "Isophotal area at level 4",
	&outobj.iso[4], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO5", "Isophotal area at level 5",
	&outobj.iso[5], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO6", "Isophotal area at level 6",
	&outobj.iso[6], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},
  {"ISO7", "Isophotal area at level 7",
	&outobj.iso[7], H_INT, T_LONG, "%8d", "pixel**2",
	"phys.area;instr.det", "pix2"},

  {"FLAGS", "Extraction flags",
	&outobj.flag, H_INT, T_SHORT, "%3d", "",
	"meta.code.qual", ""},
  {"FLAGS_WEIGHT", "Weighted extraction flags",
	&outobj.wflag, H_INT, T_SHORT, "%1d", "",
	"meta.code.qual", ""},
   {"FLAGS_WIN", "Flags for WINdowed parameters",
	&outobj2.win_flag, H_INT, T_SHORT, "%3d", "",
	"meta.code.qual", ""},
   {"IMAFLAGS_ISO", "FLAG-image flags OR'ed over the iso. profile",
	outobj.imaflag, H_INT, T_LONG, "%9u", "",
	"meta.code.qual", "", 1, &prefs.imaflag_size},
  {"NIMAFLAGS_ISO", "Number of flagged pixels entering IMAFLAGS_ISO",
	outobj.imanflag, H_INT, T_LONG, "%9d", "",
	"meta.number", "", 1, &prefs.imanflag_size},

  {"FWHM_IMAGE", "FWHM assuming a gaussian core",
	&outobj.fwhm, H_FLOAT, T_FLOAT, "%8.2f", "pixel",
	"phys.size.diameter;instr.det.psf", "pix"},
  {"FWHM_WORLD", "FWHM assuming a gaussian core",
	&outobj2.fwhmw, H_FLOAT, T_FLOAT, "%12.7g", "deg",
	"phys.angSize;instr.det.psf", "deg"},
  {"ELONGATION", "A_IMAGE/B_IMAGE",
	&outobj2.elong, H_FLOAT, T_FLOAT, "%8.3f", "",
	"src.ellipticity;arith.ratio;instr.det", ""},
  {"ELLIPTICITY", "1 - B_IMAGE/A_IMAGE",
	&outobj2.ellip, H_FLOAT, T_FLOAT, "%8.3f", "",
	"src.ellipticity;instr.det	", ""},
  {"POLAR_IMAGE", "(A_IMAGE^2 - B_IMAGE^2)/(A_IMAGE^2 + B_IMAGE^2)",
	&outobj2.polar, H_FLOAT, T_FLOAT, "%7.5f", "",
	"src.ellipticity;instr.det", ""},
  {"POLAR_WORLD", "(A_WORLD^2 - B_WORLD^2)/(A_WORLD^2 + B_WORLD^2)",
	&outobj2.polarw, H_FLOAT, T_FLOAT, "%7.5f", "",
	"src.ellipticity", ""},
  {"POLARWIN_IMAGE", "(AWIN^2 - BWIN^2)/(AWIN^2 + BWIN^2)",
	&outobj2.win_polar, H_FLOAT, T_FLOAT, "%7.5f", "",
	"src.ellipticity;instr.det", ""},
  {"POLARWIN_WORLD", "(AWIN^2 - BWIN^2)/(AWIN^2 + BWIN^2)",
	&outobj2.win_polarw, H_FLOAT, T_FLOAT, "%7.5f", "",
	"src.ellipticity", ""},
  {"CLASS_STAR", "S/G classifier output",
	&outobj2.sprob, H_FLOAT, T_FLOAT, "%5.2f", "",
	"src.class.starGalaxy", ""},
  {"VIGNET", "Pixel data around detection",
	&outobj2.vignet, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"obs.image", "ct", 2, prefs.vignetsize},
  {"VIGNET_SHIFT", "Pixel data around detection, corrected for shift",
	&outobj2.vigshift, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"obs.image", "ct", 2, prefs.vigshiftsize},
  {"VECTOR_ASSOC", "ASSOCiated parameter vector",
	&outobj2.assoc, H_FLOAT, T_FLOAT, "%12.7g", "",
	"src", "", 1, &prefs.assoc_size},
  {"NUMBER_ASSOC", "Number of ASSOCiated IDs",
	&outobj2.assoc_number, H_INT, T_LONG, "%10d", "",
	"meta.number;src", ""},

  {"THRESHOLDMAX", "Maximum threshold possible for detection",
	&outobj.dthresh, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.flux.sb;stat.max", "ct"},

  {"FLUX_GROWTH", "Cumulated growth-curve",
	&outobj2.flux_growth, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.count", "ct", 1, &prefs.flux_growthsize},
  {"FLUX_GROWTHSTEP", "Step for growth-curves",
	&outobj2.flux_growthstep, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.distance", "pix"},
  {"MAG_GROWTH", "Cumulated magnitude growth-curve",
	&outobj2.mag_growth, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag", 1, &prefs.mag_growthsize},
  {"MAG_GROWTHSTEP", "Step for growth-curves",
	&outobj2.mag_growthstep, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.distance", "pix"},
  {"FLUX_RADIUS", "Fraction-of-light radii",
	&outobj2.flux_radius, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"phys.size.radius;instr.det", "pix",  1, &prefs.flux_radiussize},

  {"XPSF_IMAGE", "X coordinate from PSF-fitting",
	&outobj2.x_psf, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.cartesian.x;stat.fit.param;instr.det", "pix", 1, &prefs.psf_xsize},
  {"YPSF_IMAGE", "Y coordinate from PSF-fitting",
	&outobj2.y_psf, H_FLOAT, T_FLOAT, "%10.3f", "pixel",
	"pos.cartesian.y;stat.fit.param;instr.det", "pix", 1, &prefs.psf_ysize},
  {"XPSF_WORLD", "PSF position along world x axis",
	&outobj2.xw_psf, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.ra;stat.fit.param", "deg", 1, &prefs.psf_xwsize},
  {"YPSF_WORLD", "PSF position along world y axis",
	&outobj2.yw_psf, H_FLOAT, T_DOUBLE, "%15.10e", "deg",
	"pos.eq.dec;stat.fit.param", "deg", 1, &prefs.psf_ywsize},

  {"ALPHAPSF_SKY", "Right ascension of the fitted PSF (native)",
	&outobj2.alphas_psf, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;stat.fit.param", "deg", 1, &prefs.psf_alphassize},
  {"DELTAPSF_SKY", "Declination of the fitted PSF (native)",
	&outobj2.deltas_psf, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;stat.fit.param", "deg", 1, &prefs.psf_deltassize},

  {"ALPHAPSF_J2000", "Right ascension of the fitted PSF (J2000)",
	&outobj2.alpha2000_psf, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;stat.fit.param", "deg", 1, &prefs.psf_alpha2000size},
  {"DELTAPSF_J2000", "Declination of the fitted PSF (J2000)",
	&outobj2.delta2000_psf, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;stat.fit.param", "deg", 1, &prefs.psf_delta2000size},

  {"ALPHAPSF_B1950", "Right ascension of the fitted PSF (B1950)",
	&outobj2.alpha1950_psf, H_FLOAT, T_DOUBLE, "%11.7f", "deg",
	"pos.eq.ra;stat.fit.param", "deg", 1, &prefs.psf_alpha1950size},
  {"DELTAPSF_B1950", "Declination of the fitted PSF (B1950)",
	&outobj2.delta1950_psf, H_FLOAT, T_DOUBLE, "%+11.7f", "deg",
	"pos.eq.dec;stat.fit.param", "deg", 1, &prefs.psf_delta1950size},

  {"FLUX_PSF", "Flux from PSF-fitting",
	&outobj2.flux_psf, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"phot.count;stat.fit.param", "ct", 1, &prefs.psf_fluxsize},
  {"FLUXERR_PSF", "RMS flux error for PSF-fitting",
	&outobj2.fluxerr_psf, H_FLOAT, T_FLOAT, "%12.7g", "count",
	"stat.stdev;phot.count", "ct", 1, &prefs.psf_fluxerrsize},
  {"MAG_PSF", "Magnitude from PSF-fitting",
	&outobj2.mag_psf, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"phot.mag", "mag", 1, &prefs.psf_magsize},
  {"MAGERR_PSF", "RMS magnitude error from PSF-fitting",
	&outobj2.magerr_psf, H_FLOAT, T_FLOAT, "%8.4f", "mag",
	"stat.stdev;phot.mag", "mag", 1, &prefs.psf_magsize},

  {"NITER_PSF", "Number of iterations for PSF-fitting",
	&outobj2.niter_psf, H_INT, T_SHORT, "%3d", "",
	"meta.number", ""},
  {"CHI2_PSF", "Reduced chi2 from PSF-fitting",
	&outobj2.chi2_psf, H_FLOAT, T_FLOAT, "%9.4g", "",
	"stat.fit.chi2", ""},

  {"ERRX2PSF_IMAGE", "Variance of PSF position along x",
	&outobj2.poserrmx2_psf, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRY2PSF_IMAGE", "Variance of PSF position along y",
	&outobj2.poserrmy2_psf, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.variance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRXYPSF_IMAGE", "Covariance of PSF position between x and y",
	&outobj2.poserrmxy_psf, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"stat.covariance;pos.errorEllipse;instr.det", "pix2"},
  {"ERRX2PSF_WORLD", "Variance of PSF position along X-WORLD (alpha)",
	&outobj2.poserrmx2w_psf, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRY2PSF_WORLD", "Variance of PSF position along Y-WORLD (delta)",
	&outobj2.poserrmy2w_psf, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.variance;pos.errorEllipse", "deg2"},
  {"ERRXYPSF_WORLD", "Covariance of PSF position X-WORLD/Y-WORLD",
	&outobj2.poserrmxyw_psf, H_EXPO, T_DOUBLE, "%15.10e", "deg**2",
	"stat.covariance;pos.errorEllipse", "deg2"},

  {"ERRCXXPSF_IMAGE", "Cxx PSF error ellipse parameter",
	&outobj2.poserrcxx_psf, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCYYPSF_IMAGE", "Cyy PSF error ellipse parameter",
	&outobj2.poserrcyy_psf, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXYPSF_IMAGE", "Cxy PSF error ellipse parameter",
	&outobj2.poserrcxy_psf, H_EXPO, T_FLOAT, "%12.7g", "pixel**(-2)",
	"src.impactParam;pos.errorEllipse;instr.det", "pix-2"},
  {"ERRCXXPSF_WORLD", "Cxx PSF error ellipse parameter (WORLD units)",
	&outobj2.poserrcxxw_psf, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCYYPSF_WORLD", "Cyy PSF error ellipse parameter (WORLD units)",
	&outobj2.poserrcyyw_psf, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},
  {"ERRCXYPSF_WORLD", "Cxy PSF error ellipse parameter (WORLD units)",
	&outobj2.poserrcxyw_psf, H_EXPO, T_FLOAT, "%12.7g", "deg**(-2)",
	"src.impactParam;pos.errorEllipse", "deg-2"},

  {"ERRAPSF_IMAGE", "PSF RMS position error along major axis",
	&outobj2.poserra_psf, H_FLOAT, T_FLOAT, "%8.4f", "pixel",
	"stat.stdev;stat.max;pos.errorEllipse;instr.det", "pix"},
  {"ERRBPSF_IMAGE", "PSF RMS position error along minor axis",
	&outobj2.poserrb_psf, H_FLOAT, T_FLOAT, "%8.4f", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse;instr.det", "pix"},
  {"ERRTHTPSF_IMAGE", "PSF error ellipse position angle (CCW/x)",
	&outobj2.poserrtheta_psf, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse;instr.det", "deg"},
  {"ERRAPSF_WORLD", "World PSF RMS position error along major axis",
	&outobj2.poserraw_psf, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.max;pos.errorEllipse", "deg"},
  {"ERRBPSF_WORLD", "World PSF RMS position error along minor axis",
	&outobj2.poserrbw_psf, H_FLOAT, T_FLOAT, "%12.7g", "pixel",
	"stat.stdev;stat.min;pos.errorEllipse", "deg"},
  {"ERRTHTPSF_WORLD", "PSF error ellipse pos. angle (CCW/world-x)",
	&outobj2.poserrthetaw_psf, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHTPSF_SKY", "Native PSF error ellipse pos. angle (east of north)",
	&outobj2.poserrthetas_psf, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHTPSF_J2000", "J2000 PSF error ellipse pos. angle (east of north)",
	&outobj2.poserrtheta2000_psf, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},
  {"ERRTHTPSF_B1950", "B1950 PSF error ellipse pos. angle (east of north)",
	&outobj2.poserrtheta1950_psf, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;pos.errorEllipse", "deg"},

  {"X2PC_IMAGE", "PC variance along x",
	&outobj2.mx2_pc, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"Y2PC_IMAGE", "PC variance along y",
	&outobj2.my2_pc, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},
  {"XYPC_IMAGE", "PC covariance between x and y",
	&outobj2.mxy_pc, H_EXPO, T_DOUBLE, "%15.10e", "pixel**2",
	"src.impactParam;instr.det", "pix2"},

  {"APC_IMAGE", "PC profile RMS along major axis",
	&outobj2.a_pc, H_FLOAT, T_FLOAT, "%8.2f", "pixel",
	"phys.size.smajAxis;instr.det", "pix"},
  {"BPC_IMAGE", "PC profile RMS along minor axis",
	&outobj2.b_pc, H_FLOAT, T_FLOAT, "%8.2f", "pixel",
	"phys.size.sminAxis;instr.det", "pix"},
  {"THETAPC_IMAGE", "PC position angle (CCW/x)",
	&outobj2.theta_pc, H_FLOAT, T_FLOAT, "%5.1f", "deg",
	"pos.posAng;instr.det", "deg"},
  {"PC", "Principal components",
	&outobj2.vector_pc, H_FLOAT, T_FLOAT, "%15.10e", "",
	"src.morph.param", "", 1, &prefs.pc_vectorsize},

//	{"RETINOUT", T_FLOAT, &outobj.retinout, "%13g "},

  {""}
  };
*/

/*
/////////////////////////////////////////////////////////////////
// OBJKEY HEADKEY
	////////////////////
	// Data for KEY - keywords for prefs
	keystruct	CSextractor::headkey[] = {
		{"FITSFILE", "File name of the analysed image",
		thecat.image_name, H_STRING, T_STRING, "%-18s"},
		{"FITSEXT ", "FITS Extension number",
		&thecat.currext, H_INT, T_LONG, "%3d"},
		{"FITSNEXT", "Number of FITS image extensions in file",
		&thecat.next, H_INT, T_LONG, "3d"},
		{"SEXVERS ", "Extraction software",
		thecat.soft_name, H_STRING, T_STRING, "%-18s"},
		{"SEXDATE ", "Extraction date",
		thecat.ext_date, H_STRING, T_STRING, "%-18s"},
		{"SEXTIME ", "Extraction time",
		thecat.ext_time, H_STRING, T_STRING, "%-18s"},
		{"SEXELAPS", "Elapsed time during extraction (s)",
		&thecat.ext_elapsed, H_FLOAT, T_DOUBLE, "%7.1f"},
		{"SEXBKGND", "Median background level (ADU)",
		&thefield1.backmean, H_EXPO, T_FLOAT, "%-13G"},
		{"SEXBKDEV", "Median background RMS (ADU)",
		&thefield1.backsig, H_EXPO, T_FLOAT, "%-13G"},
		{"SEXTHLD ", "Extraction threshold (ADU)",
		&thefield2.dthresh, H_EXPO, T_FLOAT, "%-15G"},
		{"SEXATHLD", "Analysis threshold (ADU)",
		&thefield1.thresh, H_EXPO, T_FLOAT, "%-15G"},
		{"SEXNDET ", "Number of raw detections",
		&thecat.ndetect, H_INT, T_LONG, "%9d"},
		{"SEXNFIN ", "Final number of extracted sources",
		&thecat.ntotal, H_INT, T_LONG, "%9d"},
		{"SEXNPARA", "Number of parameters per source",
		&thecat.nparam, H_INT, T_LONG, "%3d"},
		{"SEXPXSCL", "Pixel scale used for measurements (arcsec)",
		&thefield1.pixscale, H_EXPO, T_DOUBLE, "%-15G"},
		{"SEXSFWHM", "Source FWHM used for measurements (arcsec)",
		&prefs.seeing_fwhm, H_EXPO, T_DOUBLE, "%-13G"},
		{"SEXNNWF ", "S/G classification NNW filename",
		thecat.nnw_name, H_STRING, T_STRING, "%-18s"},
		{"SEXGAIN ", "Gain used (e-/ADU)",
		&prefs.gain, H_EXPO, T_DOUBLE, "%6.2f"},
		{"SEXFLTR ", "Detection filtering activated (flag)",
		&prefs.filter_flag, H_BOOL, T_LONG, "%1s"},
		{"SEXFILTN", "Filter filename",
		thecat.filter_name, H_STRING, T_STRING, "%-18s"},

		{"SEXDETT ", "Detection type",
		&prefs.detect_type, H_STRING, T_STRING, "%-18s"},

		{"SEXMINAR", "Minimum area used for detection (pixels)",
		&prefs.ext_minarea, H_INT, T_LONG, "%5d"},
		{"SEXDBLDN", "Number of deblending thresholds",
		&prefs.deblend_nthresh, H_INT, T_LONG, "%3d"},
		{"SEXDBLDC", "Minimum contrast used for deblending",
		&prefs.deblend_mincont, H_FLOAT, T_DOUBLE, "%8f"},
		{"SEXCLN  ", "Cleaning activated (flag)",
		&prefs.clean_flag, H_BOOL, T_LONG, "%1s"},
		{"SEXCLNPA", "Cleaning parameter",
		&prefs.clean_param, H_FLOAT, T_DOUBLE, "%5.2f"},
		{"SEXCLNST", "Cleaning stack-size",
		&prefs.clean_stacksize, H_INT, T_LONG, "%6d"},
		{"SEXAPED1", "Fixed photometric aperture #1 (pixels)",
		&prefs.apert[0], H_FLOAT, T_DOUBLE, "%7.1f"},
		{"SEXAPED2", "Fixed photometric aperture #2 (pixels)",
		&prefs.apert[1], H_FLOAT, T_DOUBLE, "%7.1f"},
		{"SEXAPED3", "Fixed photometric aperture #3 (pixels)",
		&prefs.apert[2], H_FLOAT, T_DOUBLE, "%7.1f"},
		{"SEXAPED4", "Fixed photometric aperture #4 (pixels)",
		&prefs.apert[3], H_FLOAT, T_DOUBLE, "%7.1f"},
		{"SEXAUTP1", "Parameter #1 used for automatic magnitudes",
		&prefs.autoparam[0], H_FLOAT, T_DOUBLE, "%4.1f"},
		{"SEXAUTP2", "Parameter #2 used for automatic magnitudes",
		&prefs.autoparam[1], H_FLOAT, T_DOUBLE, "%4.1f"},
		{"SEXPETP1", "Parameter #1 used for Petronsian magnitudes",
		&prefs.autoparam[0], H_FLOAT, T_DOUBLE, "%4.1f"},
		{"SEXPETP2", "Parameter #2 used for Petrosian magnitudes",
		&prefs.autoparam[1], H_FLOAT, T_DOUBLE, "%4.1f"},
		{"SEXSATLV", "Saturation level used for flagging (ADU)",
		&prefs.satur_level, H_EXPO, T_DOUBLE, "%-13G"},
		{"SEXMGZPT", "Zero-point used for magnitudes",
		&prefs.mag_zeropoint, H_FLOAT, T_DOUBLE, "%8.4f"},
		{"SEXMGGAM", "Gamma used for photographic photometry",
		&prefs.mag_gamma, H_FLOAT, T_DOUBLE, "%4.2f"},
		{"SEXBKGSX", "Mesh width used for background mapping (pixels)",
		&thefield1.backw, H_INT, T_LONG, "%5d"},
		{"SEXBKGSY", "Mesh height used for background mapping (pixels)",
		&thefield1.backh, H_INT, T_LONG, "%5d"},
		{"SEXBKGFX", "Mask width used for background map filtering",
		&thefield1.nbackfx, H_INT, T_LONG, "%3d"},
		{"SEXBKGFY", "Mask height used for background map filtering",
		&thefield1.nbackfy, H_INT, T_LONG, "%3d"},

		{"SEXPBKGT", "Background type for photometry",
		&prefs.pback_type, H_STRING, T_STRING, "-18s"},

		{"SEXPBKGS", "Thickness used for local background (pixels)",
		&prefs.pback_size, H_INT, T_LONG, "%3d"},
		{"SEXPIXSK", "Pixel stack-size (pixels)",
		&prefs.mem_pixstack, H_INT, T_LONG, "%8d"},
		{"SEXFBUFS", "Image-buffer height (scanlines)",
		&prefs.mem_bufsize, H_INT, T_LONG, "%5d"},
		{"SEXMWSCL", "Measurement-weight re-scaling factor",
		&thewfield1.sigfac, H_EXPO, T_FLOAT, "%-13G"},
		{"SEXDWSCL", "Detection-weight re-scaling factor",
		&thewfield2.sigfac, H_EXPO, T_FLOAT, "%-13G"},
		{""}};

*/

/*
/////////////////////////////////////////////////////////////////
// OBJKEY HEADKEY1
		keystruct	CSextractor::headkey1[] = {
  {"EPOCH   ", "",
	&thefield1.epoch, H_FLOAT, T_DOUBLE, "%7.2f"},
  {"OBJECT  ", "",
	thefield1.ident, H_STRING, T_STRING, "%18s"},
  {"ORIGIN  ", "",
	"SExtractor", H_STRING, T_STRING, "%18s"},
  {"CRVAL1", "WORLD X COORD. OF REFERENCE PIXEL",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"CRVAL2", "WORLD Y COORD. OF REFERENCE PIXEL",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"CRPIX1", "IMAGE X COORD. OF REFERENCE PIXEL",
	&idummy, H_INT, T_LONG, "%5d"},
  {"CRPIX2", "IMAGE Y COORD. OF REFERENCE PIXEL",
	&idummy, H_INT, T_LONG, "%5d"},
  {"CDELT1", "WORLD PIXEL STEP ALONG X",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"CDELT2", "WORLD PIXEL STEP ALONG Y",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"CROTA1", "CCW ANGLE FROM X-IMAGE TO X-WORLD",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"CROTA2", "CCW ANGLE FROM Y-IMAGE TO Y-WORLD",
	&ddummy, H_EXPO, T_DOUBLE, "%15G"},
  {"FITSFILE", "File name of the analysed image",
	thecat.image_name, H_STRING, T_STRING, "%-18s"},
  {"FITSEXT ", "FITS Extension number",
	&thecat.currext, H_INT, T_LONG, "%3d"},
  {"FITSNEXT", "Number of FITS image extensions in file",
	&thecat.next, H_INT, T_LONG, "3d"},
  {"SEXIMASX", "IMAGE WIDTH (PIXELS)",
	&thefield1.width, H_INT, T_LONG, "%10d"},
  {"SEXIMASY", "IMAGE HEIGHT (PIXELS)",
	&thefield1.height, H_INT, T_LONG, "%10d"},
  {"SEXSTRSY", "STRIP HEIGHT (LINES)",
	&thefield1.stripheight, H_INT, T_LONG, "%10d"},
  {"SEXIMABP", "FITS IMAGE BITPIX",
	&thefield1.bitpix, H_INT, T_LONG, "%3d"},
  {"SEXPIXS", "PIXEL SCALE (ARCSEC)",
	&thefield1.pixscale, H_EXPO, T_DOUBLE, "%12G"},
  {"SEXSFWHM", "SEEING FWHM (ARCSEC)",
	&prefs.seeing_fwhm, H_EXPO, T_DOUBLE, "%12G"},
  {"SEXNNWF ", "CLASSIFICATION NNW FILENAME",
	thecat.nnw_name, H_STRING, T_STRING, "%18s"},
  {"SEXGAIN ", "GAIN (IN E- PER ADU)",
	&prefs.gain, H_EXPO, T_DOUBLE, "%7.3F"},
  {"SEXBKGND", "MEDIAN BACKGROUND (ADU)",
	&thefield1.backmean, H_EXPO, T_FLOAT, "%12G"},
  {"SEXBKDEV", "MEDIAN RMS (ADU)",
	&thefield1.backsig, H_EXPO, T_FLOAT, "%12G"},
  {"SEXBKTHD", "EXTRACTION THRESHOLD (ADU)",
	&thefield2.thresh, H_EXPO, T_FLOAT, "%12G"},
  {"SEXCONFF", "CONFIGURATION FILENAME",
	thecat.prefs_name, H_STRING, T_STRING, "%18s"},
  {"SEXDETT ", "DETECTION TYPE",
	"CCD", H_STRING, T_STRING, "%s"},
  {"SEXTHLDT", "THRESHOLD TYPE",
	"SIGMA", H_STRING, T_STRING, "%s"},
  {"SEXTHLD ", "THRESHOLD",
	&prefs.dthresh[0], H_EXPO, T_DOUBLE, "%12G"},
  {"SEXMINAR", "EXTRACTION MINIMUM AREA (PIXELS)",
	&prefs.ext_minarea, H_INT, T_LONG, "%6d"},
  {"SEXCONV ", "CONVOLUTION FLAG",
	&prefs.filter_flag, H_BOOL, T_LONG, "%1s"},
  {"SEXCONVN", "CONVOLUTION NORM. FLAG",
	&prefs.filter_flag, H_BOOL, T_LONG, "%1s"},
  {"SEXCONVF", "CONVOLUTION FILENAME",
	thecat.filter_name, H_STRING, T_STRING, "%18s"},
  {"SEXDBLDN", "NUMBER OF SUB-THRESHOLDS",
	&prefs.deblend_nthresh, H_INT, T_LONG, "%3d"},
  {"SEXDBLDC", "CONTRAST PARAMETER",
	&prefs.deblend_mincont, H_FLOAT, T_DOUBLE, "%8f"},
  {"SEXCLN  ", "CLEANING FLAG",
	&prefs.clean_flag, H_BOOL, T_LONG, "%1s"},
  {"SEXCLNPA", "CLEANING PARAMETER",
	&prefs.clean_param, H_FLOAT, T_DOUBLE, "%8f"},
  {"SEXCLNST", "CLEANING OBJECT-STACK",
	&prefs.deblend_nthresh, H_INT, T_LONG, "%6d"},
  {"SEXAPERD", "APERTURE DIAMETER (PIXELS)",
	&prefs.apert[0], H_INT, T_LONG, "%7.1f"},
  {"SEXAPEK1", "KRON PARAMETER",
	&prefs.autoparam[0], H_FLOAT, T_DOUBLE, "%4.1f"},
  {"SEXAPEK2", "KRON ANALYSIS RADIUS",
	&prefs.autoparam[0], H_FLOAT, T_DOUBLE, "%4.1f"},
  {"SEXAPEK3", "KRON MINIMUM RADIUS",
	&prefs.autoparam[1], H_FLOAT, T_DOUBLE, "%4.1f"},
  {"SEXSATLV", "SATURATION LEVEL (ADU)",
	&prefs.satur_level, H_EXPO, T_DOUBLE, "%12G"},
  {"SEXMGZPT", "MAGNITUDE ZERO-POINT",
	&prefs.mag_zeropoint, H_FLOAT, T_DOUBLE, "%8.4f"},
  {"SEXMGGAM", "MAGNITUDE GAMMA",
	&prefs.mag_gamma, H_FLOAT, T_DOUBLE, "%4.2f"},
  {"SEXBKGSX", "BACKGROUND MESH WIDTH (PIXELS)",
	&thefield1.backw, H_INT, T_LONG, "%5d"},
  {"SEXBKGSY", "BACKGROUND MESH HEIGHT (PIXELS)",
	&thefield1.backh, H_INT, T_LONG, "%5d"},
  {"SEXBKGFX", "BACKGROUND FILTER WIDTH",
	&thefield1.nbackfx, H_INT, T_LONG, "%3d"},
  {"SEXBKGFY", "BACKGROUND FILTER HEIGHT",
	&thefield1.nbackfy, H_INT, T_LONG, "%3d"},
  {"SEXPBKGT", "PHOTOM BACKGROUND TYPE",
	"GLOBAL", H_STRING, T_STRING, "%s"},
  {"SEXPBKGS", "LOCAL AREA THICKNESS (PIXELS)",
	&prefs.pback_size, H_INT, T_LONG, "%3d"},
  {"SEXPIXSK", "PIXEL STACKSIZE (PIXELS)",
	&prefs.mem_pixstack, H_INT, T_LONG, "%8d"},
  {"SEXFBUFS", "FRAME-BUFFER SIZE (LINES)",
	&prefs.mem_bufsize, H_INT, T_LONG, "%5d"},
  {"SEXISAPR", "ISO-APER RATIO",
	 &ddummy, H_FLOAT, T_DOUBLE, "%4.2f"},
  {"SEXNDET ", "NB OF DETECTIONS",
	&thecat.ndetect, H_INT, T_LONG, "%9d"},
  {"SEXNFIN ", "NB OF FINAL EXTRACTED OBJECTS",
	&thecat.ntotal, H_INT, T_LONG, "%9d"},
  {"SEXNPARA", "NB OF PARAMETERS PER OBJECT",
	&thecat.nparam, H_INT, T_LONG, "%3d"},
  {""}};
*/

///////////////////////////////////////////////////////
// KEY DEFATULT_PREFS 
char* CSextractor::default_prefs[] =
 {
"# Default configuration file for " BANNER " " MYVERSION,
"# EB " DATE,
"#",
" ",
"#-------------------------------- Catalog ------------------------------------",
" ",
"CATALOG_NAME     test.cat       # name of the output catalog",
"CATALOG_TYPE     ASCII_HEAD     # NONE,ASCII,ASCII_HEAD, ASCII_SKYCAT,",
"                                # ASCII_VOTABLE, FITS_1.0 or FITS_LDAC",
"PARAMETERS_NAME  default.param  # name of the file containing catalog contents",
" ",
"#------------------------------- Extraction ----------------------------------",
" ",
"DETECT_TYPE      CCD            # CCD (linear) or PHOTO (with gamma correction)",
"DETECT_MINAREA   5              # minimum number of pixels above threshold",
"*THRESH_TYPE      RELATIVE       # threshold type: RELATIVE (in sigmas)",
"*                                # or ABSOLUTE (in ADUs)",
"DETECT_THRESH    1.5            # <sigmas> or <threshold>,<ZP> in mag.arcsec-2",
"ANALYSIS_THRESH  1.5            # <sigmas> or <threshold>,<ZP> in mag.arcsec-2",
" ",
"FILTER           Y              # apply filter for detection (Y or N)?",
"FILTER_NAME      default.conv   # name of the file containing the filter",
"*FILTER_THRESH                   # Threshold[s] for retina filtering",

" ",
"DEBLEND_NTHRESH  32             # Number of deblending sub-thresholds",
"DEBLEND_MINCONT  0.005          # Minimum contrast parameter for deblending",
" ",
"CLEAN            Y              # Clean spurious detections? (Y or N)?",
"CLEAN_PARAM      1.0            # Cleaning efficiency",
" ",
"MASK_TYPE        CORRECT        # type of detection MASKing: can be one of",
"                                # NONE, BLANK or CORRECT",
" ",
"*#-------------------------------- WEIGHTing ----------------------------------",
"*",
"*WEIGHT_TYPE      NONE           # type of WEIGHTing: NONE, BACKGROUND,",
"*                                # MAP_RMS, MAP_VAR or MAP_WEIGHT",
"*WEIGHT_IMAGE     weight.fits    # weight-map filename",
"*WEIGHT_GAIN      Y              # modulate gain (E/ADU) with weights? (Y/N)",
"*WEIGHT_THRESH                   # weight threshold[s] for bad pixels",
"*",
"*#-------------------------------- FLAGging -----------------------------------",
"*",
"*FLAG_IMAGE       flag.fits      # filename for an input FLAG-image",
"*FLAG_TYPE        OR             # flag pixel combination: OR, AND, MIN, MAX",
"*                                # or MOST",
"*",
"#------------------------------ Photometry -----------------------------------",
" ",
"PHOT_APERTURES   5              # MAG_APER aperture diameter(s) in pixels",
"PHOT_AUTOPARAMS  2.5, 3.5       # MAG_AUTO parameters: <Kron_fact>,<min_radius>",
"PHOT_PETROPARAMS 2.0, 3.5       # MAG_PETRO parameters: <Petrosian_fact>,",
"                                # <min_radius>",
"*PHOT_AUTOAPERS   0.0,0.0        # <estimation>,<measurement> minimum apertures",
"*                                # for MAG_AUTO and MAG_PETRO",
"*PHOT_FLUXFRAC    0.5            # flux fraction[s] used for FLUX_RADIUS",
" ",
"SATUR_LEVEL      50000.0        # level (in ADUs) at which arises saturation",
" ",
"MAG_ZEROPOINT    0.0            # magnitude zero-point",
"MAG_GAMMA        4.0            # gamma of emulsion (for photographic scans)",
"GAIN             0.0            # detector gain in e-/ADU",
"PIXEL_SCALE      1.0            # size of pixel in arcsec (0=use FITS WCS info)",
" ",
"#------------------------- Star/Galaxy Separation ----------------------------",
" ",
"SEEING_FWHM      1.2            # stellar FWHM in arcsec",
"STARNNW_NAME     default.nnw    # Neural-Network_Weight table filename",
" ",
"#------------------------------ Background -----------------------------------",
" ",
"*BACK_TYPE        AUTO           # AUTO or MANUAL",
"*BACK_VALUE       0.0            # Default background value in MANUAL mode",
"BACK_SIZE        64             # Background mesh: <size> or <width>,<height>",
"BACK_FILTERSIZE  3              # Background filter: <size> or <width>,<height>",
" ",
"BACKPHOTO_TYPE   GLOBAL         # can be GLOBAL or LOCAL",
"*BACKPHOTO_THICK  24             # thickness of the background LOCAL annulus",
"*BACK_FILTTHRESH  0.0            # Threshold above which the background-",
"*                                # map filter operates",
" ",
"#------------------------------ Check Image ----------------------------------",
" ",
"CHECKIMAGE_TYPE  NONE           # can be NONE, BACKGROUND, BACKGROUND_RMS,",
"                                # MINIBACKGROUND, MINIBACK_RMS, -BACKGROUND,",
"                                # FILTERED, OBJECTS, -OBJECTS, SEGMENTATION,",
"                                # or APERTURES",
"CHECKIMAGE_NAME  check.fits     # Filename for the check-image",
" ",
"#--------------------- Memory (change with caution!) -------------------------",
" ",
"MEMORY_OBJSTACK  3000           # number of objects in stack",
"MEMORY_PIXSTACK  300000         # number of pixels in stack",
"MEMORY_BUFSIZE   1024           # number of lines in buffer",
" ",
"*#------------------------------- ASSOCiation ---------------------------------",
"*",
"*ASSOC_NAME       sky.list       # name of the ASCII file to ASSOCiate",
"*ASSOC_DATA       2,3,4          # columns of the data to replicate (0=all)",
"*ASSOC_PARAMS     2,3,4          # columns of xpos,ypos[,mag]",
"*ASSOC_RADIUS     2.0            # cross-matching radius (pixels)",
"*ASSOC_TYPE       MAG_SUM        # ASSOCiation method: FIRST, NEAREST, MEAN,",
"*                                # MAG_MEAN, SUM, MAG_SUM, MIN or MAX",
"*ASSOCSELEC_TYPE  MATCHED        # ASSOC selection type: ALL, MATCHED or -MATCHED",
"*",
"#----------------------------- Miscellaneous ---------------------------------",
" ",
"VERBOSE_TYPE     NORMAL         # can be QUIET, NORMAL or FULL",
"WRITE_XML        N              # Write XML file (Y/N)?",
"XML_NAME         sex.xml        # Filename for XML output",
"*XSL_URL          " XSL_URL,
"*                                # Filename for XSL style-sheet",
#ifdef USE_THREADS
"*NTHREADS         0              # Number of simultaneous threads for",
"*                                # the SMP version of " BANNER,
"*                                # 0 = automatic",
#else
"*NTHREADS         1              # 1 single thread",
#endif
"*",
"*FITS_UNSIGNED    N              # Treat FITS integer values as unsigned (Y/N)?",
"*INTERP_MAXXLAG   16             # Max. lag along X for 0-weight interpolation",
"*INTERP_MAXYLAG   16             # Max. lag along Y for 0-weight interpolation",
"*INTERP_TYPE      ALL            # Interpolation type: NONE, VAR_ONLY or ALL",
"*",
"*#--------------------------- Experimental Stuff -----------------------------",
"*",
"*PSF_NAME         default.psf    # File containing the PSF model",
"*PSF_NMAX         9              # Max.number of PSFs fitted simultaneously",
"*PSFDISPLAY_TYPE  SPLIT          # Catalog type for PSF-fitting: SPLIT or VECTOR",
"*SOM_NAME         default.som    # File containing Self-Organizing Map weights",
""
 };

#endif

